@using System.Linq
@model IEnumerable<RoomCast.Models.MediaFile>
@{
    ViewData["Title"] = "My Files";
    var files = Model?.ToList() ?? new System.Collections.Generic.List<RoomCast.Models.MediaFile>();
}

<div id="deleteFileModal" class="fixed inset-0 z-40 hidden items-center justify-center bg-slate-950/70 px-4">
    <div class="relative w-full max-w-md rounded-2xl bg-white shadow-2xl ring-1 ring-slate-200">
        <form method="post" asp-action="Delete" class="space-y-6 p-6">
            @Html.AntiForgeryToken()
            <input type="hidden" name="id" id="delete-file-id" />
            <div class="space-y-2">
                <h3 class="text-lg font-semibold text-slate-900">Delete File</h3>
                <p class="text-sm text-slate-600">
                    Are you sure you want to delete
                    <span class="font-semibold text-slate-900" data-file-title>this file</span>?
                    This action cannot be undone.
                </p>
            </div>
            <div class="flex flex-col gap-3 sm:flex-row sm:justify-end">
                <button type="button"
                        class="inline-flex items-center justify-center rounded-md border border-slate-300 px-4 py-2 text-sm font-semibold text-slate-700 shadow-sm transition hover:border-slate-400 hover:text-slate-900"
                        data-close-modal>
                    Cancel
                </button>
                <button type="submit"
                        class="inline-flex items-center justify-center rounded-md bg-red-600 px-4 py-2 text-sm font-semibold text-white shadow-sm transition hover:bg-red-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-red-600">
                    Delete
                </button>
            </div>
        </form>
        <button type="button"
                class="absolute right-4 top-4 text-slate-400 transition hover:text-slate-600"
                aria-label="Close modal"
                data-close-modal>
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M5.22 5.22a.75.75 0 0 1 1.06 0L10 8.94l3.72-3.72a.75.75 0 1 1 1.06 1.06L11.06 10l3.72 3.72a.75.75 0 0 1-1.06 1.06L10 11.06l-3.72 3.72a.75.75 0 0 1-1.06-1.06L8.94 10 5.22 6.28a.75.75 0 0 1 0-1.06z" clip-rule="evenodd" />
            </svg>
        </button>
    </div>
</div>

@section Scripts
{
    <script src="https://cdn.jsdelivr.net/npm/%40ffmpeg/ffmpeg@0.12.6/dist/ffmpeg.min.js" crossorigin="anonymous"></script>
    <script src="~/js/media-preview.js" asp-append-version="true"></script>
    <script>
        (() => {
            const modal = document.getElementById('deleteFileModal');
            const triggers = document.querySelectorAll('[data-delete-trigger]');
            if (!modal || triggers.length === 0) {
                return;
            }

            const idInput = modal.querySelector('#delete-file-id');
            const titleDisplay = modal.querySelector('[data-file-title]');
            const closeButtons = modal.querySelectorAll('[data-close-modal]');

            const toggleModal = (show) => {
                modal.classList.toggle('hidden', !show);
                modal.classList.toggle('flex', show);
                document.body.classList.toggle('overflow-hidden', show);

                if (!show) {
                    if (idInput) {
                        idInput.value = '';
                    }
                    if (titleDisplay) {
                        titleDisplay.textContent = 'this file';
                    }
                }
            };

            triggers.forEach(trigger => {
                trigger.addEventListener('click', () => {
                    const fileId = trigger.getAttribute('data-file-id') ?? '';
                    const fileTitle = trigger.getAttribute('data-file-title') ?? 'this file';

                    if (idInput) {
                        idInput.value = fileId;
                    }
                    if (titleDisplay) {
                        titleDisplay.textContent = fileTitle;
                    }

                    toggleModal(true);
                });
            });

            closeButtons.forEach(button => {
                button.addEventListener('click', () => toggleModal(false));
            });

            modal.addEventListener('click', (event) => {
                if (event.target === modal) {
                    toggleModal(false);
                }
            });
        })();
    </script>
}

<div class="flex flex-col gap-4 pb-6 md:flex-row md:items-center md:justify-between">
    <h2 class="text-2xl font-semibold text-slate-900">My Files</h2>
    <form method="get" class="flex flex-col gap-3 sm:flex-row sm:items-center">
        <input type="text"
               name="searchTags"
               value="@(Context.Request.Query["searchTags"])"
               placeholder="Search by tags"
               class="w-full rounded-lg border border-slate-300 bg-white px-4 py-2 text-sm text-slate-700 shadow-sm transition focus:border-indigo-500 focus:outline-none focus:ring-2 focus:ring-indigo-200 sm:w-64" />
        <button type="submit"
                class="inline-flex items-center justify-center rounded-md bg-indigo-600 px-4 py-2 text-sm font-semibold text-white shadow-sm transition hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">
            Search
        </button>
    </form>
</div>

@if (TempData["Message"] != null)
{
    <div class="mb-4 rounded-xl border-l-4 border-emerald-500 bg-emerald-50 p-4 text-sm text-emerald-800 shadow-sm">
        @TempData["Message"]
    </div>
}
@if (TempData["Error"] != null)
{
    <div class="mb-4 rounded-xl border-l-4 border-red-500 bg-red-50 p-4 text-sm text-red-700 shadow-sm">
        @TempData["Error"]
    </div>
}

@if (!files.Any())
{
    <div class="flex flex-col items-center gap-3 rounded-3xl border border-dashed border-slate-300 bg-white px-6 py-12 text-center text-slate-500 shadow-sm">
        <i class="bi bi-emoji-frown text-4xl text-slate-400"></i>
        <p class="text-base font-semibold text-slate-600">No files found.</p>
        <p class="text-sm text-slate-500">Try adjusting your search or upload a new file.</p>
    </div>
}
else
{
    <div class="grid grid-cols-1 gap-6 sm:grid-cols-2 xl:grid-cols-3 2xl:grid-cols-4">
        @foreach (var file in files)
        {
            <div>
                @await Html.PartialAsync("_MediaFileCard", file)
            </div>
        }
    </div>
}

<div data-preview-root class="hidden"></div>
