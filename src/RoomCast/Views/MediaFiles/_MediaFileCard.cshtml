@using System.Globalization
@model RoomCast.Models.MediaFile

@{
    Func<string?, string> iconForType = fileType =>
    {
        if (string.IsNullOrWhiteSpace(fileType))
        {
            return "bi-file-earmark";
        }

        return fileType.Trim().ToLowerInvariant() switch
        {
            "picture" or "image" => "bi-file-image",
            "video" => "bi-file-earmark-play",
            "audio" => "bi-file-music",
            "document" or "pdf" or "text" => "bi-file-text",
            "presentation" => "bi-file-earmark-slides",
            "spreadsheet" => "bi-file-earmark-spreadsheet",
            _ => "bi-file-earmark"
        };
    };

    var uploadedAt = Model.CreatedAt.ToLocalTime().ToString("g");
    var sizeInMb = Model.FileSize / (1024d * 1024d);
    var duration = Model.DurationSeconds.HasValue
        ? System.TimeSpan.FromSeconds(Model.DurationSeconds.Value)
        : (System.TimeSpan?)null;
    var durationLabel = duration.HasValue
        ? (duration.Value.TotalHours >= 1
            ? duration.Value.ToString(@"hh\:mm\:ss")
            : duration.Value.ToString(@"mm\:ss"))
        : null;
    var iconClass = iconForType(Model.FileType);
    var videoContentType = string.IsNullOrWhiteSpace(Model.ContentType)
        ? "video/mp4"
        : Model.ContentType;
    var normalizedType = string.IsNullOrWhiteSpace(Model.FileType)
        ? string.Empty
        : Model.FileType.Trim().ToLowerInvariant();
    var isImage = normalizedType is "picture" or "image";
    var isVideo = normalizedType is "video";
    var isDocument = string.Equals(Model.FileType, "Document", System.StringComparison.OrdinalIgnoreCase);
    var normalizedFormat = Model.FileFormat?.Trim().ToLowerInvariant();
    var isPlainTextDocument = isDocument && (normalizedFormat is ".txt" or ".text");
}

<div class="flex h-full flex-col overflow-hidden rounded-2xl bg-white shadow-sm ring-1 ring-slate-200/70 transition duration-200 ease-out hover:-translate-y-1 hover:shadow-lg"
     data-media-card
     data-media-id="@Model.FileId"
     data-media-type="@normalizedType"
     data-media-title="@Model.Title"
     data-media-src="@(isImage || isVideo ? Model.FilePath : null)"
     data-media-content-type="@(isVideo ? videoContentType : null)"
     data-media-duration="@(Model.DurationSeconds?.ToString(CultureInfo.InvariantCulture))"
     data-media-size="@(Model.FileSize > 0 ? Model.FileSize.ToString(CultureInfo.InvariantCulture) : null)"
     data-media-poster="@(isVideo && !string.IsNullOrWhiteSpace(Model.ThumbnailPath) ? Model.ThumbnailPath : null)">
    <div class="px-5 pt-5">
        <div class="flex items-start gap-3">
            <div class="flex h-11 w-11 items-center justify-center rounded-full bg-indigo-50 text-indigo-600">
                <i class="bi @iconClass text-xl"></i>
            </div>
            <div class="min-w-0 flex-1">
                <h5 class="truncate text-base font-semibold text-slate-900" title="@Model.Title">@Model.Title</h5>
                <p class="text-xs font-medium uppercase tracking-wide text-slate-400">@Model.FileType</p>
            </div>
            @if (durationLabel != null || sizeInMb > 0)
            {
                <div class="flex shrink-0 flex-col items-end gap-1 text-[10px] font-medium uppercase tracking-wide text-slate-400">
                    @if (durationLabel != null)
                    {
                        <span>@durationLabel</span>
                    }
                    <span>@string.Format("{0:0.##} MB", sizeInMb)</span>
                </div>
            }
        </div>
    </div>

    <div class="mt-4 flex flex-1 flex-col px-5">
        <div class="flex h-48 w-full items-center justify-center overflow-hidden rounded-xl bg-slate-50">
            @if (isImage)
            {
                <img src="@Model.FilePath"
                     alt="@Model.Title"
                     class="h-full w-full object-cover" />
            }
            else if (isVideo)
            {
                if (!string.IsNullOrEmpty(Model.ThumbnailPath))
                {
                    <img src="@Model.ThumbnailPath"
                         alt="@Model.Title"
                         class="h-full w-full object-cover" />
                }
                else
                {
                    <video class="h-full w-full rounded-xl" controls preload="metadata">
                        <source src="@Model.FilePath" type="@videoContentType" />
                    </video>
                }
            }
            else
            {
                <div class="flex flex-col items-center gap-2 text-center text-slate-500">
                    <i class="bi @iconClass text-3xl"></i>
                    <span class="text-sm">No preview available</span>
                </div>
            }
        </div>
    </div>

    <div class="flex items-center justify-between gap-3 px-5 pb-5 pt-4">
        <small class="text-xs text-slate-500">Uploaded @uploadedAt</small>
        <div class="flex items-center gap-2">
            @if (isPlainTextDocument)
            {
                <a class="inline-flex items-center justify-center rounded-md border border-slate-200 px-3 py-1.5 text-xs font-semibold text-slate-700 transition hover:border-indigo-300 hover:text-indigo-600"
                   asp-controller="MediaFiles"
                   asp-action="EditText"
                   asp-route-id="@Model.FileId"
                   target="_blank"
                   rel="noopener noreferrer">
                    Edit
                </a>
            }
            @if (isVideo)
            {
                <a class="inline-flex items-center justify-center rounded-md border border-slate-200 px-3 py-1.5 text-xs font-semibold text-slate-700 transition hover:border-indigo-300 hover:text-indigo-600"
                   asp-controller="MediaFiles"
                   asp-action="EditVideo"
                   asp-route-id="@Model.FileId"
                   target="_blank"
                   rel="noopener noreferrer">
                    Edit
                </a>
            }
            @if (isImage)
            {
                <form method="post"
                      asp-controller="MediaFiles"
                      asp-action="ReplaceImage"
                      asp-route-id="@Model.FileId"
                      asp-route-returnUrl="@(Context.Request.Path + Context.Request.QueryString)"
                      enctype="multipart/form-data"
                      class="contents"
                      data-image-replace-form>
                    @Html.AntiForgeryToken()
                    <input type="file"
                           name="replacement"
                           accept=".jpg,.jpeg,.png,.gif,.bmp,.webp"
                           class="sr-only"
                           data-image-replace-input />
                    <button type="button"
                            class="inline-flex items-center justify-center rounded-md border border-slate-200 px-3 py-1.5 text-xs font-semibold text-slate-700 transition hover:border-indigo-300 hover:text-indigo-600"
                            data-image-replace-trigger>
                        Replace
                    </button>
                </form>
            }
            @if (isDocument)
            {
                <a class="inline-flex items-center justify-center rounded-md bg-indigo-50 px-3 py-1.5 text-xs font-semibold text-indigo-600 transition hover:bg-indigo-100 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-500"
                   asp-controller="MediaFiles"
                   asp-action="Preview"
                   asp-route-id="@Model.FileId"
                   target="_blank"
                   rel="noopener noreferrer">
                    Preview
                </a>
            }
            <a class="inline-flex items-center justify-center rounded-md border border-slate-200 px-3 py-1.5 text-xs font-semibold text-slate-700 transition hover:border-slate-300 hover:text-slate-900"
               href="@Model.FilePath"
               target="_blank"
               rel="noopener noreferrer">
                Open
            </a>
            <button type="button"
                    class="inline-flex items-center justify-center rounded-md bg-red-50 px-3 py-1.5 text-xs font-semibold text-red-600 transition hover:bg-red-100"
                    data-delete-trigger
                    data-file-id="@Model.FileId"
                    data-file-title="@Model.Title">
                Delete
            </button>
        </div>
    </div>
</div>
